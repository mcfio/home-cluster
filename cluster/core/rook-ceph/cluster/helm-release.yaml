---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 12h
  maxHistory: 2
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.9.4
      sourceRef:
        kind: HelmRepository
        name: rook-release
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
  upgrade:
    remediation:
      remediateLastFailure: true
  values:
    toolbox:
      enabled: false
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "nginx"
        host:
          name: &host "ceph.${INTERNAL_DOMAIN}"
          path: "/"
        tls:
          - hosts:
              - *host
    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v17.2.0-20220420
      dashboard:
        ssl: false
      crashCollector:
        disable: true
      placement:
        all:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/storage
                      operator: In
                      values:
                        - ""
          tolerations:
            - key: node-role.kubernetes.io/storage
              operator: Exists
      storage:
        useAllNodes: false
        useAllDevices: false
        nodes:
          - name: "mcf-k8s-node08"
            devices:
              - name: "/dev/disk/by-id/nvme-WD_Blue_SN570_1TB_21424V804453"
          - name: "mcf-k8s-node09"
            devices:
              - name: "/dev/disk/by-id/nvme-WD_Blue_SN570_1TB_21424V801912"
          - name: "mcf-k8s-node10"
            devices:
              - name: "/dev/disk/by-id/nvme-WD_Blue_SN570_1TB_21424L802686"
      resources:
        mon:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "10m"
            memory: "1Gi"
        osd:
          limits:
            cpu: "2000m"
            memory: "4Gi"
          requests:
            cpu: "10m"
            memory: "4Gi"
        prepareosd:
          limits:
            cpu: "500m"
            memory: "2Gi"
          requests:
            cpu: "50m"
            memory: "50Mi"
        mgr-sidecar:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "10m"
            memory: "40Mi"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
          deviceClass: nvme
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          relcaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: ceph-block
      isDefault: true
      deletionPolicy: Delete
      annotations: {}
      labels: {}
      parameters: {}
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 2
            activeStandby: true
            resources:
              limits:
                cpu: "2000m"
                memory: "4Gi"
              requests:
                cpu: "1000m"
                memory: "4Gi"
            priorityClassName: system-cluster-critical
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io/storage
                        operator: In
                        values:
                          - ""
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: kubernetes.io/hostname
                whenUnsatisfiable: DoNotSchedule
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: ceph-mds
            tolerations:
              - key: node-role.kubernetes.io/storage
                operator: Exists
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
      annotations: {}
      labels: {}
      parameters: {}
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              limits:
                cpu: "2000m"
                memory: "2Gi"
              requests:
                cpu: "1000m"
                memory: "1Gi"
            instances: 1
            priorityClassName: system-cluster-critical
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
