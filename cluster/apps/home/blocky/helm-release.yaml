---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: blocky
  namespace: home
spec:
  interval: 12h
  maxHistory: 2
  chart:
    spec:
      chart: blocky
      version: 10.4.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
  values:
    image:
      repository: ghcr.io/0xerr0r/blocky
      tag: v0.19
    controller:
      enabled: true
      type: deployment
      strategy: RollingUpdate
      replicas: 2
    env:
      TZ: America/Toronto
    service:
      main:
        enabled: true
        ports:
          http:
            port: 4000
      dns:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ${VIP_DNS_SERVICE}
        externalTrafficPolicy: Local
        ports:
          dns-https:
            enabled: true
            port: 443
            protocol: TCP
            targetPort: 443
          dns-tls:
            enabled: true
            port: 853
            protocol: TCP
            targetPort: 853
          dns-tcp:
            enabled: true
            port: 53
            protocol: TCP
            targetPort: 53
          dns-udp:
            enabled: true
            port: 53
            protocol: UDP
            targetPort: 53
    metrics:
      enabled: true
      serviceMonitor:
        interval: 30s
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
    probes:
      startup:
        spec:
          # increase the startup time to allow downloading of the block lists
          initialDelaySeconds: 30
    persistence:
      blocky-cert:
        enabled: true
        mountPath: /cert
        type: secret
        name: blocky-cert
    config: |
      bootstrapDns: tcp+udp:${IP_NETWORK_GATEWAY}
      upstream:
        default:
        - https://dns.nextdns.io/${NEXTDNS_ID}
        - tcp-tls:${NEXTDNS_ID}.dns.nextdns.io
      caching:
        minTime: 5m
        maxTime: 30m
        prefetching: true
      customDNS:
        mapping:
          ca.mcf.io: 192.168.30.10
          ca.milton.mcf.io: 192.168.30.10
          dns.milton.mcf.io: ${VIP_DNS_SERVICE}
          ingress.milton.mcf.io: ${VIP_CLUSTER_INGRESS}
          kubernetes.lan: ${VIP_CLUSTER_APISERVER}
          mcf-ca01.lan: 192.168.30.10
          mcf-k8s-cluster.milton.mcf.io: ${VIP_CLUSTER_APISERVER}
          mcf-pve01.milton.mcf.io: 192.168.40.15
          milton-dns1.lan: 192.168.30.30
          milton.mcf.io: ${VIP_CLUSTER_INGRESS}
          mqtt.milton.mcf.io: ${VIP_MQTT_SERVICE}
          ntp.milton.mcf.io: 192.168.30.30
          setup.ui.com: ${IP_NETWORK_GATEWAY}
          time.mcf.io: 192.168.30.30
          time.milton.mcf.io: 192.168.30.30
      conditional:
        mapping:
          devices.wifiman.me: tcp+udp:${IP_NETWORK_GATEWAY}
          ui.direct: tcp+udp:${IP_NETWORK_GATEWAY}
          lan: tcp+udp:${IP_NETWORK_GATEWAY}
          cluster.lan: tcp+udp:${IP_NETWORK_GATEWAY}
      blocking:
        blackLists:
          ads:
          - https://raw.githubusercontent.com/ookangzheng/dbl-oisd-nl/master/dbl.txt
          - https://raw.githubusercontent.com/mmotti/adguard-home-filters/master/regex.txt
        whiteLists:
          ads:
          - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt
          - https://raw.githubusercontent.com/mmotti/adguard-home-filters/master/whitelist.txt
          - |
            /^uplab.pro/
            /mp.microsoft.com/
            /mask.icloud.com/
            /mask-h2.icloud.com/
            /ext.azure.com/
            /ad.azure.com/
        clientGroupsBlock:
          default:
          - ads
      clientLookup:
        upstream: tcp+udp:${IP_NETWORK_GATEWAY}
      redis:
        address: blocky-redis-master.home:6379
        password: ${BLOCKY_REDIS_PASSWORD}
        database: 2
        required: true
      prometheus:
        enable: true
        path: /metrics
      httpPort: 4000
      httpsPort: 443
      tlsPort: 853
      certFile: /cert/tls.crt
      keyFile: /cert/tls.key
    podAnnotations:
      configmap.reloader.stakater.com/reload: blocky-config
      secret.reloader.stakater.com/reload: blocky-cert
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: blocky
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 750Mi
