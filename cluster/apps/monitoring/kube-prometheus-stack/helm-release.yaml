---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 12h
  maxHistory: 2
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 41.7.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    fullnameOverride: prom
    alertmanager:
      config:
        templates:
          - /etc/alertmanager/config/*.tmpl
          - /etc/alertmanager/configmaps/**/*.tmpl
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        hosts:
          - &host alertmanager.${INTERNAL_DOMAIN}
        tls:
          - hosts:
              - *host
      podDisruptionBudget:
        enabled: true
      alertmanagerSpec:
        # for now we need to add the templates to the stack spec until it's
        # supported in alertmanagerConfig
        configMaps:
          - slack-templates
        replicas: 2
        externalUrl: https://alertmanager.${INTERNAL_DOMAIN}
        podAntiAffinity: hard
        resources:
          requests:
            cpu: 10m
            memory: 60M
          limits:
            memory: 300M
        storage:
          volumeClaimTemplate:
            metadata:
              name: data
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        hosts:
          - &host prometheus.${INTERNAL_DOMAIN}
        tls:
          - hosts:
              - *host
      podDisruptionBudget:
        enabled: false
      prometheusSpec:
        retention: 30d
        externalUrl: https://prometheus.${INTERNAL_DOMAIN}
        externalLabels:
          cluster: mcf-k8s-cluster
        portName: http-web
        logFormat: json
        replicas: 1
        resources:
          requests:
            cpu: 250m
            memory: 2G
          limits:
            memory: 4G
        nodeSelector:
          kubernetes.io/arch: amd64
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: data
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 80Gi
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
    prometheusOperator:
      admissionWebhooks:
        certManager:
          enabled: true
      resources:
        requests:
          cpu: 15m
          memory: 128M
        limits:
          memory: 800M
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 10m
            memory: 60M
          limits:
            cpu: 0
            memory: 80M
    grafana:
      enabled: false
      forceDeployDashboards: false
      forceDeployDatasources: true
      sidecar:
        datasources:
          url: http://prom-prometheus.monitoring:9090/
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      resources:
        requests:
          cpu: 15m
          memory: 128M
        limits:
          memory: 400M
      metricLabelsAllowlist:
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            # node label isn't populated properly by default
            - action: replace
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: node
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      image:
        repository: quay.io/prometheus/node-exporter
        tag: v1.4.0
      resources:
        requests:
          cpu: 15m
          memory: 100M
        limits:
          memory: 150M
      prometheus:
        monitor:
          enabled: true
          relabelings:
            # node label isn't populated properly by default
            - action: replace
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: node
