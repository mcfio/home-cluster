---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 12h
  maxHistory: 2
  chart:
    spec:
      chart: loki
      version: 2.11.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
  values:
    replicas: 2
    serviceMonitor:
      enabled: true
    podDisruptionBudget:
      minAvailable: 1
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - loki
            topologyKey: kubernetes.io/hostname
    config:
      # limits_config:
      #   enforce_metric_name: false
      #   reject_old_samples: true
      #   reject_old_samples_max_age: 168h
      #   ingestion_rate_mb: 16
      #   ingestion_burst_size_mb: 24
      table_manager:
        retention_deletes_enabled: true
        retention_period: 672h
      storage_config:
        aws:
          region: us-east-1
          insecure: true
          s3forcepathstyle: true
          sse_encryption: false
          http_config:
            idle_conn_timeout: 90s
            response_header_timeout: 0s
            insecure_skip_verify: false
        boltdb_shipper:
          active_index_directory: /data/loki/index
          cache_location: /data/loki/index_cache
          cache_ttl: 24h # Can be increased for faster performance over longer query periods, uses more disk space
          resync_interval: 5s
          shared_store: s3
      compactor:
        retention_enabled: true
      ruler:
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /tmp/scratch
        alertmanager_url: http://prom-alertmanager.monitoring:9093
        ring:
          kvstore:
            store: inmemory
        enable_api: true
    alerting_groups:
      - name: arr
        rules:
          - alert: DatabaseIsLocked
            expr: |
              sum by (app) (count_over_time({app=~".*arr"} |= "database is locked"[2m])) > 0
            for: 10s
            labels:
              severity: critical
              category: logs
            annotations:
              identifier: "{{ $labels.node }}"
              description: "{{ $labels.app }} has a locked configuration database"
  valuesFrom:
    - kind: ConfigMap
      name: loki-bucket
      valuesKey: BUCKET_NAME
      targetPath: config.storage_config.aws.bucketnames
    - kind: ConfigMap
      name: loki-bucket
      valuesKey: BUCKET_HOST
      targetPath: config.storage_config.aws.endpoint
    - kind: Secret
      name: loki-bucket
      valuesKey: AWS_ACCESS_KEY_ID
      targetPath: config.storage_config.aws.access_key_id
    - kind: Secret
      name: loki-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
      targetPath: config.storage_config.aws.secret_access_key
