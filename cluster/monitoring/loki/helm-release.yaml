---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 12h
  maxHistory: 2
  chart:
    spec:
      chart: loki
      version: 5.8.7
      sourceRef:
        kind: HelmRepository
        name: grafana
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    test:
      enabled: false
    loki:
      auth_enabled: false
      server:
        log_level: info
      limits_config:
        retention_period: 14d
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
        per_stream_rate_limit: 64M
        per_stream_rate_limit_burst: 128M
        ingestion_rate_mb: 64
        ingestion_burst_size_mb: 128
        shard_streams:
          enabled: true
      storage:
        s3:
          endpoint: http://minio.monitoring:80
          accessKeyId: minio
          secretAccessKey: minio123
          s3ForcePathStyle: true
          insecure: true
      rulerConfig:
        enable_api: true
        enable_alertmanager_v2: true
        alertmanager_url: http://prom-alertmanager.monitoring:9093
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /rules
      compactor:
        working_directory: /var/loki/boltdb-shipper-compactor
        shared_store: s3
        compaction_interval: 10m
        retention_enabled: true
        retention_delete_delay: 2h
        retention_delete_worker_count: 150
      analytics:
        reporting_enabled: false
      ingester:
        max_chunk_age: 1h
    monitoring:
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false
    write:
      replicas: 3
      resources:
        limits:
          memory: 800M
        requests:
          cpu: 60m
          memory: 150M
    read:
      replicas: 3
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
      resources:
        limits:
          memory: 800M
        requests:
          cpu: 60m
          memory: 150M
    backend:
      replicas: 3
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
      resources:
        limits:
          memory: 800M
        requests:
          cpu: 60m
          memory: 150M
    gateway:
      enabled: true
      replicas: 3
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.25-alpine
      deploymentStrategy:
        type: RollingUpdate
        # Scale down nodes before deploying new one
        rollingUpdate:
          maxSurge: 0
          maxUnavailable: 1
      resources:
        limits:
          memory: 125M
        requests:
          cpu: 15m
          memory: 100M
