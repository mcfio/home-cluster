---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  cleanup:failed:
    desc: Clean-up pods with 'Failed' status
    cmds:
      - kubectl delete pods --field-selector status.phase=Failed -A --ignore-not-found=true

  cleanup:succeeded:
    desc: Clean-up pods with 'Succeeded' status
    cmds:
      - kubectl delete pods --field-selector status.phase=Succeeded -A --ignore-not-found=true

  mount:
    desc: Mount a PersistantVolumeClaim to a pod temporarily
    summary: |
      Args:
        namespace: Namespace the PVC is in (default: default)
        claim: PVC to mount (required)
    interactive: true
    vars:
      NAMESPACE: '{{.namespace | default "default"}}'
      CLAIM: "{{.claim}}"
    requires:
      vars:
        - claim
    cmd: |
      kubectl run -n {{.NAMESPACE}} debug-{{.CLAIM}} -i --tty --rm --image=null --privileged --overrides='
        {
          "apiVersion": "v1",
          "spec": {
            "containers": [
              {
                "name": "debug",
                "image": "ghcr.io/onedr0p/alpine:rolling",
                "command": ["/bin/bash"],
                "stdin": true,
                "stdinOnce": true,
                "tty": true,
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/config"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "config",
                "persistentVolumeClaim": {
                  "claimName": "{{.CLAIM}}"
                }
              }
            ],
            "restartPolicy": "Never"
          }
        }'
    preconditions:
      - sh: kubectl --namespace {{.NAMESPACE}} get pvc {{.CLAIM}}
        msg: PVC not found.

  # Maintain a clean execution
  default:
    silent: true
    cmds: [task -l]
