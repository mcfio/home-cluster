---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  VOLSYNC_RESOURCES_DIR: "{{.ROOT_DIR}}/.taskfiles/volsync/resources"

tasks:
  state-*:
    desc: Suspend or Resume Volsync
    cmds:
      - flux --namespace {{.NAMESPACE}} {{.STATE}} kustomization volsync
      - flux --namespace {{.NAMESPACE}} {{.STATE}} helmrelease volsync
      - kubectl --namespace {{.NAMESPACE}} scale deployment volsync --replicas {{if eq "suspend" .STATE}}0{{else}}1{{end}}
    vars:
      NAMESPACE: '{{default "volsync-system" .namespace}}'
      STATE: "{{index .MATCH 0}}"
      preconditions:
        - '[[ "{{.STATE}}" == "suspend" || "{{.STATE}}" == "resume" ]]'
        - which flux kubectl

  snapshot:
    desc: Snapshot an app [namespace=default] [app=required]
    cmds:
      - kubectl --namespace {{.NAMESPACE}} patch replicationsources {{.APP}} --type merge -p '{"spec":{"trigger":{"manual":"{{now | unixEpoch}}"}}}'
      - until kubectl --namespace {{.NAMESPACE}} get job/{{.JOB}} &>/dev/null; do sleep 5; done
      - kubectl --namespace {{.NAMESPACE}} wait job/{{.JOB}} --for=condition=complete --timeout=120m
    vars:
      APP: "{{.app}}"
      NAMESPACE: '{{default "default" .namespace}}'
      JOB: volsync-src-{{.APP}}
    requires:
      vars: [APP]
    preconditions:
      - kubectl --namespace {{.NAMESPACE}} get replicationsources {{.APP}}
      - which kubectl

  restore:
    desc: Restore a snapshot to an application PVC [namespace=default] [app=required] [previous=required]
    cmds:
      # Suspend
      - flux --namespace {{.NAMESPACE}} suspend kustomization {{.APP}}
      - flux --namespace {{.NAMESPACE}} suspend helmrelease {{.APP}}
      - kubectl --namespace {{.NAMESPACE}} scale {{.CONTROLLER}}/{{.APP}} --replicas 0
      - kubectl --namespace {{.NAMESPACE}} wait pod --for delete --selector="app.kubernetes.io/name={{.APP}}" --timeout=2m
      # Restore
      - minijinja-cli {{.VOLSYNC_RESOURCES_DIR}}/restore.yaml.j2 | kubectl apply --server-side --filename -
      - until kubectl --namespace {{.NAMESPACE}} get job/volsync-dst-{{.APP}}-manual &>/dev/null; do sleep 5; done
      - kubectl --namespace {{.NAMESPACE}} wait job/volsync-dst-{{.APP}}-manual --for=condition=complete --timeout=120m
      - kubectl --namespace {{.NAMESPACE}} delete replicationdestination {{.APP}}-manual
      # Resume
      - flux --namespace {{.NAMESPACE}} resume kustomization {{.APP}}
      - flux --namespace {{.NAMESPACE}} resume helmrelease {{.APP}}
      - flux --namespace {{.NAMESPACE}} reconcile helmrelease {{.APP}} --force
      - kubectl --namespace {{.NAMESPACE}} wait pod --for=condition=ready --selector="app.kubernetes.io/name={{.APP}}" --timeout=5m
    vars:
      APP: "{{.app}}"
      NAMESPACE: '{{default "default" .namespace}}'
      CONTROLLER:
        sh: kubectl --namespace {{.NAMESPACE}} get deployment {{.APP}} &>/dev/null && echo deployment.apps || echo statefulset.apps
    env:
      APP: "{{.APP}}"
      NAMESPACE: "{{.NAMESPACE}}"
      PREVIOUS: "{{default 2 .previous}}"
      CLAIM_NAME:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.sourcePVC}"
      ACCESS_MODES:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.accessModes}"
      STORAGE_CLASS_NAME:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.storageClassName}"
      PUID:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.moverSecurityContext.runAsUser}"
      PGID:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.moverSecurityContext.runAsGroup}"
    requires:
      vars: [APP, PREVIOUS]
      preconditions:
        - test -f "{{.VOLSYNC_RESOURCES_DIR}}/unlock.yaml.j2"
        - which flux kubectl minijinja-cli

  unlock:
    desc: Unlock a restic source repo [namespace=default] [app=required]
    cmds:
      - minijinja-cli {{.VOLSYNC_RESOURCES_DIR}}/unlock.yaml.j2 | kubectl apply --server-side --filename -
      - until kubectl --namespace {{.NAMESPACE}} get job/volsync-unlock-{{.APP}} &>/dev/null; do sleep 5; done
      - kubectl --namespace {{.NAMESPACE}} wait job/volsync-unlock-{{.APP}} --for condition=complete --timeout=5m
      - stern --namespace {{.NAMESPACE}} job/volsync-unlock-{{.APP}} --no-follow
      - kubectl --namespace {{.NAMESPACE}} delete job volsync-unlock-{{.APP}}
    vars:
      APP: "{{.app}}"
      NAMESPACE: '{{default "default" .namespace}}'
    env:
      APP: "{{.APP}}"
      NAMESPACE: "{{.NAMESPACE}}"
    requires:
      vars: [APP]
    preconditions:
      - test -f {{.VOLSYNC_RESOURCES_DIR}}/unlock.yaml.j2
      - which kubectl minijinja-cli stern
