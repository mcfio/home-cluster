---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  VOLSYNC_RESOURCES_DIR: '{{.ROOT_DIR}}/.taskfiles/volsync/resources'

env:
  APP: '{{.APP}}'
  NAMESPACE: '{{.NAMESPACE}}'
  JOB: '{{.JOB}}'
  CLAIM_NAME: '{{.CLAIM_NAME}}'
  ACCESS_MODES: '{{.ACCESS_MODES}}'
  STORAGE_CLASS_NAME: '{{.STORAGE_CLASS_NAME}}'
  PREVIOUS: '{{.PREVIOUS}}'
  PUID: '{{.PUID}}'
  PGID: '{{.PGID}}'

tasks:

  state-*:
    desc: Suspend or Resume Volsync
    summary: |
      Args:
        state: resume or suspend (required)
    cmds:
      - flux --namespace {{.NAMESPACE}} {{.STATE}} helmrelease volsync
      - kubectl --namespace {{.NAMESPACE}} scale deployment volsync --replicas {{if eq "suspend" .STATE}}0{{else}}1{{end}}
    vars:
      NAMESPACE: '{{default "volsync-system" .namespace}}'
      STATE: '{{index .MATCH 0}}'

  list:
    desc: List snapshots for an application
    summary: |
      namespace: Namespace the PVC is in (default: default)
      app: Application to list snapshots for (required)
    cmds:
      - minijinja-cli --env --trim-blocks --lstrip-blocks --autoescape=none {{.VOLSYNC_RESOURCES_DIR}}/list.yaml.j2 | kubectl apply --server-side --filename -
      - defer: kubectl --namespace {{.NAMESPACE}} delete job {{.JOB}}
      - kubectl --namespace {{.NAMESPACE}} wait job/{{.JOB}} --for condition=complete --timeout=1m
      - kubectl --namespace {{.NAMESPACE}} logs job/{{.JOB}} --container main
    requires:
      vars: ["app"]
    vars:
      APP: '{{.app}}'
      NAMESPACE: '{{default "default" .namespace}}'
      JOB: 'volsync-list-{{.app}}'
    preconditions:
      - test -f {{.VOLSYNC_RESOURCES_DIR}}/list.yaml.j2
    silent: true

  unlock:
    desc: Unlock all restic repositories
    cmd: >
      kubectl get replicationsources --all-namespaces --no-headers -A | awk '{print $1, $2}'
      | xargs --max-procs=2 -l bash -c 'kubectl --namespace "$0" patch --field-manager=flux-client-side-apply replicationsources "$1" --type merge \
        --patch "{\"spec\":{\"restic\":{\"unlock\":\"{{now | unixEpoch}}\"}}}"'

  restore:
    desc: Restore a snapshot to an application PVC
    summary: |
      namespace: Namespace the PVC is in (default: default)
      app: Application to list snapshots for (required)
      previous: The number of previous snapshot to restore (default 2)
    cmds:
      - task: .suspend
      - task: .resume
    requires:
      vars: ["app"]
    vars:
      APP: '{{.app}}'
      NAMESPACE: '{{default "default" .namespace}}'
      PREVIOUS: '{{default 2 .previous}}'
      CLAIM_NAME:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.sourcePVC}"
      ACCESS_MODES:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.accessModes}"
      STORAGE_CLASS_NAME:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.storageClassName}"
      PUID:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.moverSecurityContext.runAsUser}"
      PGID:
        sh: kubectl --namespace {{.NAMESPACE}} get replicationsources/{{.APP}} --output jsonpath="{.spec.restic.moverSecurityContext.runAsGroup}"

  # Internal task to suspend the kustomization and helm-release resources and scale the deployment to zero.
  .suspend:
    internal: true
    cmds:
      - flux --namespace flux-system suspend kustomization {{.APP}}
      - flux --namespace {{.NAMESPACE}} suspend helmrelease {{.APP}}
      - kubectl --namespace {{.NAMESPACE}} scale {{.CONTROLLER}}/{{.APP}} --replicas 0
      - kubectl --namespace {{.NAMESPACE}} wait pod --for delete --selector="app.kubernetes.io/name={{.APP}}" --timeout=2m
    vars:
      CONTROLLER:
        sh: kubectl --namespace {{.NAMESPACE}} get deployment {{.APP}} &>/dev/null && echo deployment.apps || echo statefulset.apps

  # Internal task to resume the kustomization and helm-release resources.
  .resume:
    internal: true
    cmds:
      - flux --namespace flux-system resume kustomization {{.APP}}
      - flux --namespace {{.NAMESPACE}} resume helmrelease {{.APP}}
