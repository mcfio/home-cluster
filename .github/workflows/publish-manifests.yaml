---
name: Publish Manifests

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - .github/workflows/publish-manifests.yaml
      - kubernetes/**

permissions:
  packages: write
  id-token: write
  attestations: write

env:
  OCI_REPO: "ghcr.io/${{ github.repository_owner }}/kubernetes-manifests/${{ github.event.repository.name }}"

jobs:
  publish-manifests:
    name: OCI Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@31c86eb3b33c9b601a1f60f98dcbfd1d70f379b4 # v1
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      # - name: Install Cosign
      #   uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Setup Flux
        uses: fluxcd/flux2/action@896e0fa46d5107a05e953dd0a5261d78a145ec8c # v2.3.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: "${{ secrets.BOT_APP_ID }}"
          password: "${{ steps.app-token.outputs.token }}"

      - name: Create OCI Artifact
        id: create
        run: |
          digest_sha=$(flux push artifact \
            oci://$OCI_REPO:$(git rev-parse --short HEAD) \
            --path="./kubernetes" \
            --source="${{ github.repositoryUrl }}" \
            --revision="${{ github.ref_name }}@sha1:$(git rev-parse HEAD)" \
            --output=json | \
            jq -r '. | .digest')
          echo "DIGEST_SHA=$digest_sha" >> $GITHUB_OUTPUT

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.OCI_REPO }}
      #     subject-digest: ${{ steps.create.outputs.DIGEST_SHA }}
      #     push-to-registry: true
      #
      # - name: Generate Cosign attestation
      #   run: |
      #     cosign sign --yes "${{ env.OCI_REPO }}@${{ steps.create.outputs.DIGEST_SHA }}"
      #
      # - name: Tag OCI artifact
      #   run: |
      #     flux tag artifact "oci://$OCI_REPO:$(git rev-parse --short HEAD)" --tag main
      #
