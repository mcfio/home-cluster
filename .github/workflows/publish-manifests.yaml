---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Publish Manifests

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/publish-manifests.yaml
      - kubernetes/**

permissions:
  packages: write
  id-token: write
  attestations: write

env:
  REPOSITORY: ghcr.io/${{ github.repository_owner }}/kubernetes-manifests/${{ github.event.repository.name }}

jobs:
  publish-manifests:
    name: Publish Manifest Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Install Crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4

      - name: Setup Flux
        uses: fluxcd/flux2/action@af67405ee43a6cd66e0b73f4b3802e8583f9d961 # v2.5.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Manifest OCI Artifact
        id: create
        run: |
          flux push artifact oci://$REPOSITORY:$(git rev-parse --short ${{ github.sha }}) \
            --path="./kubernetes" \
            --source="${{ github.repositoryUrl }}" \
            --revision="${{ github.ref_name }}@sha1:${{ github.sha }}"

      - name: Get OCI Artifact Digest
        id: digest
        run: |
          digest=$(crane digest $REPOSITORY:$(git rev-parse --short ${{ github.sha }}))
          echo "DIGEST_SHA=$digest" >> $GITHUB_OUTPUT

      - name: Generate GitHub Attestation
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2
        with:
          subject-name: ${{ env.REPOSITORY }}
          subject-digest: ${{ steps.digest.outputs.DIGEST_SHA }}
          push-to-registry: true

      - name: Generate Cosign Signature
        run: |
          cosign sign --yes "${{ env.REPOSITORY }}@${{ steps.digest.outputs.DIGEST_SHA }}"

      - name: Add :main Tag to OCI Artifact
        run: |
          flux tag artifact oci://$REPOSITORY:$(git rev-parse --short ${{ github.sha }}) --tag main
