---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Flux Repository Sync

on:
  workflow_dispatch:
    inputs:
      helmRepoNamespace:
        description: Helm Repository Namespace
        default: flux-system
        required: true
      helmRepoName:
        description: Helm Repository Name
        required: true
  pull_request:
    branches:
      - main
    paths:
      - kubernetes/**/release.yaml

jobs:
  helm-sync:
    name: Helm Repositories
    runs-on:
      - gha-runner-scale-set
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Flux
        uses: fluxcd/flux2/action@5350425cdcd5fa015337e09fa502153c0275bd4b # v2.4.0

      - name: Setup yq
        uses: chrisdickinson/setup-yq@69aa9efdf7a9240129b103a65373c05cbc375679 # v1.0.0

      - name: Get Changed Files
        id: changed-files
        if: ${{ github.event.inputs.helmRepoNamespace == '' && github.event.inputs.helmRepoName == '' }}
        uses: tj-actions/changed-files@dcc7a0cba800f454d79fff4b993e8c3555bcc0a8 # v45
        with:
          files: kubernetes/**/release.yaml
          safe_output: false

      - name: Sync Repository
        if: ${{ github.event.inputs.helmRepoNamespace == '' && github.event.inputs.helmRepoName == '' }}
        run: |
          declare -A repos=()
          for f in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
              repo_namespace="$(yq -r '.spec.chart.spec.sourceRef.namespace' "${f}")"
              repo_name="$(yq -r '.spec.chart.spec.sourceRef.name' "${f}")"
              repos["${repo_namespace}:${repo_name}"]=1
          done
          for r in "${!repos[@]}"; do
              IFS=':' read -r repo_namespace repo_name <<< "${r}"
              flux --namespace ${repo_namespace} \
                  reconcile source helm ${repo_name} || true
          done

      - name: Sync Repository
        if: ${{ github.event.inputs.helmRepoNamespace != '' && github.event.inputs.helmRepoName != '' }}
        run: |
          flux --namespace ${{ github.event.inputs.helmRepoNamespace }} \
              reconcile source helm ${{ github.event.inputs.helmRepoName }} || true
