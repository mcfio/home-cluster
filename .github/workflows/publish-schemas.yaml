---
name: Publish Schemas

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - main
    paths:
      - .github/workflows/publish-schemas.yaml

permissions:
  packages: write
  id-token: write

env:
  OCI_REPO: "oci://ghcr.io/${{ github.repository_owner }}/kubernetes-schemas/${{ github.event.repository.name }}"

jobs:
  publish-schemas:
    name: Publish Schemas
    runs-on:
      - arc-home-cluster-runner

    steps:
      - name: Setup Flux
        uses: fluxcd/flux2/action@a18d4f345021182d6516bf3e8e00210567f46ab5 # v2.1.2

      - name: Install Cosign
        uses: sigstore/cosign-installer@1fc5bd396d372bee37d608f955b336615edf79c8 # v3.2.0

      - name: Setup Kube Tools
        uses: yokawasa/action-setup-kube-tools@af4ebb1af1efd30c5bd84a2e9773355ad6362a33 # v0.9.3
        with:
          setup-tools: kubectl

      - name: Setup Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: 3.x

      - name: Setup crd-extractor
        uses: robinraju/release-downloader@efa4cd07bd0195e6cc65e9e30c251b49ce4d3e51 # v1.8
        with:
          repository: datreeio/CRDs-catalog
          latest: true
          fileName: crd-extractor.zip

      - name: Retrieve Secret from 1Password Vault
        id: op-load-secret
        uses: 1password/load-secrets-action@d1a4e73495bde3551cf63f6c048588b8f734e21d # v1
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          KUBECONFIG_BASE64: "op://${{ secrets.OP_VAULT_NAME }}/mcfio-github-actions-read/credential"

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
        with:
          encodedString: ${{ steps.op-load-secret.outputs.KUBECONFIG_BASE64 }}
          fileName: kubeconfig

      - name: Run crd-extractor
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        shell: bash
        run: |
          unzip -j $GITHUB_WORKSPACE/crd-extractor.zip -d $GITHUB_WORKSPACE
          bash $GITHUB_WORKSPACE/crd-extractor.sh

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Create OCI Artifact
        id: create-oci-artifact
        run: |
          digest_url=$(flux push artifact \
            $OCI_REPO:$(git rev-parse --short HEAD) \
            --path="/home/runner/.datree/crdSchemas" \
            --source="${{ github.repositoryUrl }}" \
            --revision="${{ github.ref_name }}@sha1:$(git rev-parse HEAD)" \
            --output=json | \
            jq -r '. | .repository + "@" + .digest')
          echo "DIGEST_URL=$digest_url" >> $GITHUB_OUTPUT

      - name: Tag OCI Artifact
        run: |
          flux tag artifact "$OCI_REPO:$(git rev-parse --short HEAD)" --tag main

      - name: Sign OCI Artifact
        run: |
          cosign sign --yes ${{ steps.create-oci-artifact.outputs.DIGEST_URL }}

  publish-schemas-container:
    name: Publish Schemas Container
    runs-on: ubuntu-latest
    needs:
      - publish-schemas
    steps:
      - name: Setup Flux
        uses: fluxcd/flux2/action@a18d4f345021182d6516bf3e8e00210567f46ab5 # v2.1.2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Pull OCI Artifact
        shell: bash
        run: |
          mkdir -p /home/runner/crdSchemas
          flux pull artifact "$OCI_REPO:$(git rev-parse --short HEAD)" --output /home/runner/crdSchemas

      - name: Write nginx-unprivileged Dockerfile
        shell: bash
        run: |
          cat <<EOF > /home/runner/crdSchemas/Dockerfile
          FROM docker.io/nginxinc/nginx-unprivileged:latest
          COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
          USER nginx
          EOF

      - name: Push Container to GHCR
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: /home/runner/crdSchemas
          platforms: linux/amd64,linux/arm64
          file: /home/runner/crdSchemas/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/kubernetes-schemas:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source="${{ github.repositoryUrl }}"
            org.opencontainers.image.authors="Nick M <rkage@users.noreply.github.com>"
