# vim: ft=ansible.yaml
# yaml-language-server: $schema=https://raw.githubusercontent.com/siderolabs/talos/refs/heads/release-1.10/website/content/v1.10/schemas/config.schema.json
version: v1alpha1
debug: false
machine:
  token: op://home-cluster/talos/machine/token
  ca:
    crt: op://home-cluster/talos/machine/ca_crt
    {% if is_controlplane %}
    key: op://home-cluster/talos/machine/ca_key
    {% endif %}
  certSANs:
    - 127.0.0.1
    - 192.168.45.40
    - 192.168.45.70
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.34.0
    extraArgs:
      cloud-provider: external
      rotate-server-certificates: "true"
    extraConfig:
      imageGCHighThresholdPercent: 70
      imageGCLowThresholdPercent: 50
      shutdownGracePeriod: 60s
      allowedUnsafeSysctls:
        - "net.ipv6.conf.net1.*" # Allow IPv6 syscalls, required for matter/thread
    extraMounts:
      - destination: /var/openebs/local
        type: bind
        source: /var/openebs/local
        options: [ "bind", "rshared", "rw" ]
    defaultRuntimeSeccompProfileEnabled: true
    nodeIP:
      validSubnets:
        - 192.168.45.0/24
    disableManifestsDirectory: true
  files:
    - path: /etc/cri/conf.d/20-customization.part
      op: create
      content: |-
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          device_ownership_from_security_context = true
    - path: /etc/nfsmount.conf
      op: overwrite
      permissions: 0o644
      content: |-
        [ NFSMount_Global_Options ]
        nfsvers=4.2
        hard=True
        nconnect=16
        noatime=True
  sysctls:
    fs.inotify.max_user_watches: "1048576"  # Watchdog
    fs.inotify.max_user_instances: "8192"   # Watchdog
    net.core.rmem_max: "67108864"           # Cloudflared / QUIC
    net.core.wmem_max: "67108864"           # Cloudflared / QUIC
    user.max_user_namespaces: "11255"       # User Namespaces
    vm.nr_hugepages: "1024"                 # PostgreSQL
  features:
    rbac: true
    stableHostname: true
    {% if is_controlplane %}
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles:
        - os:admin
      allowedKubernetesNamespaces:
        - arc-system
        - kube-system
        - system-upgrade
    {% endif %}
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: true
      port: 7445
    hostDNS:
      enabled: true
      resolveMemberNames: true
      forwardKubeDNSToHost: false
  time:
    servers:
      - 192.168.10.30
cluster:
  id: op://home-cluster/talos/cluster/id
  secret: op://home-cluster/talos/cluster/secret
  controlPlane:
    endpoint: https://192.168.45.70:6443
  clusterName: home-cluster
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.45.0.0/16
    serviceSubnets:
      - 10.46.0.0/16
  token: op://home-cluster/talos/cluster/token
  ca:
    crt: op://home-cluster/talos/cluster/ca_crt
    {% if is_controlplane %}
    key: op://home-cluster/talos/cluster/ca_key
    {% endif %}
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.34.0
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: false
  {% if is_controlplane %}
  aggregatorCA:
    crt: op://home-cluster/talos/cluster/aggregator_ca_crt
    key: op://home-cluster/talos/cluster/aggregator_ca_key
  serviceAccount:
    key: op://home-cluster/talos/cluster/service_account_key
  allowSchedulingOnControlPlanes: true
  secretboxEncryptionSecret: op://home-cluster/talos/cluster/secretbox_encryption_secret
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.34.0
    extraArgs:
      enable-aggregator-routing: "true"
      feature-gates: ImageVolume=true,MutatingAdmissionPolicy=true
      runtime-config: admissionregistration.k8s.io/v1beta1=true
    certSANs:
      - 127.0.0.1
      - 192.168.45.40
      - 192.168.45.70
    disablePodSecurityPolicy: true
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.34.0
    extraArgs:
      bind-address: 0.0.0.0
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.34.0
    extraArgs:
      bind-address: 0.0.0.0
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
  coreDNS:
    disabled: true
  etcd:
    ca:
      crt: op://home-cluster/talos/etcd/ca_crt
      key: op://home-cluster/talos/etcd/ca_key
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
      election-timeout: "5000"
    advertisedSubnets:
      - 192.168.45.0/24
  {% endif %}
