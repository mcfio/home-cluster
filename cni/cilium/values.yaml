---
# Kubernetes exports KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT with a ClusterIP
# of the kube-apiserver service to the pod, however without kube-proxy in this setup the Cillium
# agent needs to be made aware of how to reach the kube-apiserver
k8sServiceHost: 192.168.45.40
k8sServicePort: 6443

# -- Roll out cilium agent pods automatically when configmap is updated.
rollOutCiliumPods: true

# -- Enable installation of PodCIDR routes between worker
# nodes if worker nodes share a common L2 network segment.
autoDirectNodeRoutes: true

bpf:
  masquerade: true
enableIPv4Masquerade: true
# -- Specify the CIDR for native routing (ie to avoid IP masquerade for).
# This value corresponds to the configured cluster-cidr.
# nativeRoutingCIDR: 10.244.0.0/18
ipv4NativeRoutingCIDR: 10.244.0.0/18

# -- Configure BGP
bgp:
  # -- Enable BGP support inside Cilium; embeds a new ConfigMap for BGP inside
  # cilium-agent and cilium-operator
  enabled: false
  announce:
    # -- Enable allocation and announcement of service LoadBalancer IPs
    loadbalancerIP: true

# -- Configure container runtime specific integration.
containerRuntime:
  integration: containerd

hubble:
  enabled: true
  metrics:
    enabled:
    - dns:query;ignoreAAAA
    - drop
    - tcp
    - flow
    - port-distribution
    - icmp
    - http
  listenAddress: ":4244"
  relay:
    enabled: true
    rollOutPods: true
  ui:
    enabled: true
    rollOutPods: true
    # backend:
    #   image:
    #     tag: v0.8.0
    # frontend:
    #   image:
    #     tag: v0.8.0

# -- Configure IP Address Management mode.
# ref: https://docs.cilium.io/en/stable/concepts/networking/ipam/
ipam:
  mode: kubernetes

# -- Configure the kube-proxy replacement in Cilium BPF datapath
# ref: https://docs.cilium.io/en/stable/gettingstarted/kubeproxy-free/
kubeProxyReplacement: strict

# -- healthz server bind address for the kube-proxy replacement.
kubeProxyReplacementHealthzBindAddr: "0.0.0.0:10256"

# -- Configure maglev consistent hashing
maglev:
  tableSize: 1021
  hashSeed: "P9jc887+zv7eNcUr"

# -- Configure service load balancing
loadBalancer:
  # -- algorithm is the name of the load balancing algorithm for backend
  algorithm: maglev
  # -- mode is the operation mode of load balancing for remote backends
  mode: dsr

# -- Configure prometheus metrics on the configured port at /metrics
prometheus:
  enabled: true
  port: 8090
  # serviceMonitor CRD may not yet exist in which this parameter needs to be
  # adjusted
  serviceMonitor:
    enabled: true

# -- Configure the encapsulation configuration for communication between nodes.
tunnel: disabled

operator:
  rollOutPods: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  prometheus:
    enabled: true
    # As an install task, the serviceMonitor CRD does not yet exist
    serviceMonitor:
      enabled: true
