---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: app-template
      version: 3.0.1
      sourceRef:
        kind: HelmRepository
        name: mediaserver-charts
        namespace: mediaserver
  upgrade:
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          labels:
            sidecar.istio.io/inject: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 100
              - 1000
            seccompProfile:
              type: RuntimeDefault
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - sonarr
                          - plex
                  topologyKey: kubernetes.io/hostname
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2@sha256:0db95dfc91792834ce27e7d400c0c2b4032a69b2705ccd04b2a0a215286c85f6
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: *app
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.4.1.8654@sha256:f59912e61010a72d38f9973b1695329889666355df09d18d15ec4f95ff45ed13
            env:
              TZ: Canada/Eastern
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 7878
              RADARR__lOG_LEVEL: info
              RADARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 500m
                memory: 450Mi
              limits:
                memory: 2048Mi
            securityContext: *securityContext
    service:
      main:
        controller: main
        ports:
          http:
            port: *port
    persistence:
      config:
        enabled: true
        retain: true
        size: 2Gi
        storageClass: zfs-nvmeof-csi
        accessMode: ReadWriteOnce
      downloads:
        existingClaim: downloads
        globalMounts:
          - path: /downloads
      media:
        existingClaim: media
        globalMounts:
          - path: /media
