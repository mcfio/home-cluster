---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: mediaserver-charts
        namespace: mediaserver
  upgrade:
    cleanupOnFail: true
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          labels:
            sidecar.istio.io/inject: "true"
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            runAsNonRoot: true
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 100 # nfs.cluster:users
            seccompProfile:
              type: RuntimeDefault
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2@sha256:930a20e3ea8c82504d8e80f413d042d9936930d625fb098dd306b5aad427a151
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr
              tag: 4.0.2.1183@sha256:42ba5af9b0ea20f4db4622991e0f1657be02c6e8747872c652fdac193c097b25
            env:
              TZ: Canada/Eastern
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port ${BACKEND_PORT}
              SONARR__LOG_LEVEL: info
              SONARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 500m
                memory: 450Mi
              limits:
                memory: 2048Mi
            securityContext: *securityContext
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    persistence:
      config:
        existingClaim: ${VOLUME_CLAIM}
      nfs-downloads:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /media-pool/downloads
        advancedMounts:
          sonarr:
            app:
              - path: /downloads
      nfs-media-1:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /media-pool/tv
        advancedMounts:
          sonarr:
            app:
              - path: /media/tv
      nfs-media-2:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /storage/media
        advancedMounts:
          sonarr:
            app:
              - path: /storage
