---
# yaml-language-server: $schema=https://crds.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 63.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: monitoring
  install:
    crds: Skip
  upgrade:
    cleanupOnFail: true
    crds: Skip
  dependsOn:
    - name: prometheus-operator-crds
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    fullnameOverride: stack
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      # config:
      #   templates:
      #     - /etc/alertmanager/config/*.tmpl
      #     - /etc/alertmanager/configmaps/**/*.tmpl
      # ingress:
      #   enabled: true
      #   pathType: Prefix
      #   ingressClassName: nginx
      #   hosts:
      #     - alertmanager.milton.mcf.io
      #   tls:
      #     - hosts:
      #         - alertmanager.milton.mcf.io
      # podDisruptionBudget:
      #   enabled: true
      alertmanagerSpec:
        # for now we need to add the templates to the stack spec until it's
        # supported in alertmanagerConfig
        # configMaps:
        #   - slack-templates
        resources:
          limits:
            memory: 300M
          requests:
            cpu: 10m
            memory: 60M
        storage:
          volumeClaimTemplate:
            metadata:
              name: data
            spec:
              storageClassName: ceph-block
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
          - prometheus.milton.mcf.io
        pathType: Prefix
      prometheusSpec:
        scrapeInterval: 1m # Matches interval from Grafana helm chart
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalUrl: https://prometheus.milton.mcf.io
        logFormat: json
        retention: 14d
        retentionSize: 70GB
        resources:
          requests:
            cpu: 257m
          limits:
            memory: 1500Mi
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: data
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 75Gi
    prometheusOperator:
      fullnameOverride: prometheus-operator
      admissionWebhooks:
        certManager:
          enabled: true
      resources:
        requests:
          cpu: 15m
          memory: 128M
        limits:
          memory: 800M
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 10m
            memory: 60M
          limits:
            cpu: 0
            memory: 80M
    grafana:
      enabled: false
      forceDeployDashboards: false
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
      forceDeployDatasources: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      resources:
        requests:
          cpu: 15m
          memory: 100M
        limits:
          memory: 150M
