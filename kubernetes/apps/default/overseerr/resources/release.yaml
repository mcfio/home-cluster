---
# yaml-language-server: $schema=https://crds.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: overseerr
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: default
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      overseerr:
        containers:
          app:
            image:
              repository: sctx/overseerr
              tag: 1.33.2@sha256:714ea6db2bc007a2262d112bef7eec74972eb33d9c72bddb9cbd98b8742de950
            env:
              TZ: Canada/Eastern
              LOG_LEVEL: info
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: &port 5055
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        controller: overseerr
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
        className: nginx
        hosts:
          - host: &fqdn ${FQDN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: overseerr-cert
            hosts:
              - *fqdn
    persistence:
      config:
        existingClaim: ${VOLUME_CLAIM}
        advancedMounts:
          overseerr:
            app:
              - path: /app/config
