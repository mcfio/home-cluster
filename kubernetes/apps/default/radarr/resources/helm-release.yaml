---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-4.1.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 12h
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      radarr:
        labels:
          app.kubernetes.io/depends-on: cnpg-cluster
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.27.3.10153@sha256:1bf822eaf3d944dc994656c3a712a89df0d88f5f46731af4fccc90c5e0333167
            env:
              TZ: Canada/Eastern
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__lOG__DBENABLED: "False"
              RADARR__lOG__LEVEL: info
              RADARR__SERVER__PORT: &port 7878
              RADARR__POSTGRES__HOST: cnpg-cluster-rw.default.svc.cluster.local
              RADARR__POSTGRES__PORT: "5432"
              RADARR__POSTGRES__MAINDB: ${dbName}
              RADARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: radarr-db-secret
                    key: username
              RADARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: radarr-db-secret
                    key: password
            envFrom:
            - secretRef:
                name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
        - 100 # nfs.cluster:users
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
        - "{{ .Release.Name }}.milton.mcf.io"
        parentRefs:
        - name: internal
          namespace: ingress-system
          sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}-cache"
      # config-cache:
      #   existingClaim: "{{ .Release.Name }}-cache"
      #   globalMounts:
      #   - path: /config/MediaCover
      media:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /mnt/storage/media
      tmp:
        type: emptyDir
