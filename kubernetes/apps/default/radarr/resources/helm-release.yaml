---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-4.0.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 12h
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      radarr:
        labels:
          app.kubernetes.io/depends-on: cnpg-cluster
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.25.0.10024@sha256:512dee5af5226f4952413fac01d599e89a24107f21ae451ef44644c779bf4f7d
            env:
              TZ: Canada/Eastern
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__lOG__DBENABLED: "False"
              RADARR__lOG__LEVEL: info
              RADARR__SERVER__PORT: &port 7878
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 100 # nfs.cluster:users
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    route:
      app:
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - name: internal
            namespace: ingress-system
            sectionName: https
        hostnames:
          - "{{ .Release.Name }}.milton.mcf.io"
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
      media:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /mnt/storage/media
      tmp:
        type: emptyDir
