---
# yaml-language-server: $schema=https://crds.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: default
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr
              tag: 4.0.9.2244@sha256:c89b8f77e396eb4869bacd6763efad3dadf9f68535cbadce5cd733e14c0c19c2
            env:
              TZ: Canada/Eastern
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__LOG_LEVEL: info
              SONARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 384Mi
              limits:
                memory: 2Gi
            securityContext: *securityContext
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 100 # nfs.cluster:users
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: nginx
        hosts:
          - host: "{{ .Release.Name }}.milton.mcf.io"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: ${VOLUME_CLAIM}
      archive:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /media-pool/tv
        advancedMounts:
          sonarr:
            app:
              - path: /archive/tv
      media:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /storage/media
        advancedMounts:
          sonarr:
            app:
              - path: /media
