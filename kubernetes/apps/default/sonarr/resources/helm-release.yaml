---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/app-template-4.1.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 12h
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              TZ: Canada/Eastern
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
            envFrom:
            - secretRef:
                name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
        - 100 # nfs.cluster:users
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
        - "{{ .Release.Name }}.milton.mcf.io"
        parentRefs:
        - name: internal
          namespace: ingress-system
          sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      cache:
        enabled: true
        suffix: cache
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
        - path: /config/MediaCover
      media:
        type: nfs
        server: kaitain.internal
        path: /shows
        globalMounts:
        - path: /media/shows
      downloads:
        type: nfs
        server: nfs.cluster.milton.mcf.io
        path: /mnt/storage/media/downloads
        globalMounts:
        - path: /media/downloads
      tmp:
        type: emptyDir
