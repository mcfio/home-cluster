# yaml-language-server: $schema=https://kubernetes-schemas.mcf.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.8.3
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
  install:
    createNamespace: true
    crds: Create
    replace: true
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: false
      # config:
      #   templates:
      #     - /etc/alertmanager/config/*.tmpl
      #     - /etc/alertmanager/configmaps/**/*.tmpl
      # ingress:
      #   enabled: true
      #   pathType: Prefix
      #   ingressClassName: nginx
      #   hosts:
      #     - alertmanager.milton.mcf.io
      #   tls:
      #     - hosts:
      #         - alertmanager.milton.mcf.io
      # podDisruptionBudget:
      #   enabled: true
      # alertmanagerSpec:
      #   # for now we need to add the templates to the stack spec until it's
      #   # supported in alertmanagerConfig
      #   # configMaps:
      #   #   - slack-templates
      #   podAntiAffinity: hard
      #   replicas: 2
      #   resources:
      #     limits:
      #       memory: 300M
      #     requests:
      #       cpu: 10m
      #       memory: 60M
      #   storage:
      #     volumeClaimTemplate:
      #       metadata:
      #         name: data
      #       spec:
      #         storageClassName: vsphere-csi
      #         accessModes:
      #           - ReadWriteOnce
      #         resources:
      #           requests:
      #             storage: 1Gi
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheus:
      podDisruptionBudget:
        enabled: false
      prometheusSpec:
        externalUrl: https://prometheus.milton.mcf.io
        externalLabels:
          cluster: mcf-k8s-cluster
        portName: http-web
        logFormat: json
        replicas: 1
        resources:
          limits:
            memory: 4G
          requests:
            cpu: 250m
            memory: 2G
        storageSpec:
          volumeClaimTemplate:
            metadata:
              name: data
            spec:
              storageClassName: vsphere-csi
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 80Gi
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
    prometheusOperator:
      admissionWebhooks:
        certManager:
          enabled: true
      resources:
        requests:
          cpu: 15m
          memory: 128M
        limits:
          memory: 800M
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 10m
            memory: 60M
          limits:
            cpu: 0
            memory: 80M
    grafana:
      enabled: false
      forceDeployDashboards: false
      forceDeployDatasources: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      resources:
        requests:
          cpu: 15m
          memory: 128M
        limits:
          memory: 400M
      metricLabelsAllowlist:
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            # node label isn't populated properly by default
            - action: replace
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: node
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      resources:
        requests:
          cpu: 15m
          memory: 100M
        limits:
          memory: 150M
