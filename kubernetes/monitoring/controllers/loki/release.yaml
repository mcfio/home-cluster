---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: loki
spec:
  interval: 12h
  maxHistory: 3
  chart:
    spec:
      chart: loki
      version: 6.3.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: monitoring
  timeout: 15m
  upgrade:
    cleanupOnFail: true
  # https://github.com/grafana/loki/blob/main/production/helm/loki/values.yaml
  values:
    deploymentMode: SimpleScalable
    loki:
      podAnnotations:
        secret.reloader.stakater.com/reload: loki-secret
      auth_enabled: false
      server:
        log_level: info
      limits_config:
        retention_period: 14d
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
        per_stream_rate_limit: 64M
        per_stream_rate_limit_burst: 128M
        ingestion_rate_mb: 64
        ingestion_burst_size_mb: 128
        shard_streams:
          enabled: true
      commonConfig:
        replication_factor: 3
      storage:
        bucketNames:
          chunks: loki-chunks
          ruler: loki-ruler
          admin: loki-admin
        type: s3
        s3:
          s3ForcePathStyle: true
          insecure: false
      compactor:
        working_directory: /var/loki/boltdb-shipper-compactor
        delete_request_store: s3
        retention_enabled: true
      ingester:
        max_chunk_age: 1h
      analytics:
        reporting_enabled: false
      rulerConfig:
        enable_api: true
        enable_alertmanager_v2: true
        alertmanager_url: http://alertmanager-operated.monitoring:9093
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /rules/fake
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
    extraObjects:
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: loki-datasource
          labels:
            grafana_datasource: "1"
            app.kubernetes.io/part-of: kube-prometheus-stack
        data:
          loki-datasource.yaml: |-
            apiVersion: 1
            datasources:
            - name: Loki
              type: loki
              access: proxy
              url: http://loki-gateway.monitoring.svc.cluster.local:{{ .Values.gateway.service.port }}
              version: 1
              isDefault: false
    gateway:
      enabled: true
      replicas: 3
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.25-alpine
      resources:
        limits:
          memory: 125M
        requests:
          cpu: 15m
          memory: 100M
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 50%
          maxSurge: 50%
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/component: gateway
    read:
      replicas: 3
      resources:
        limits:
          memory: 800M
        requests:
          cpu: 60m
          memory: 150M
    write:
      replicas: 3
      persistence:
        size: 20Gi
        storageClass: openebs-hostpath
      resources:
        limits:
          memory: 800M
        requests:
          cpu: 60m
          memory: 150M
    backend:
      replicas: 3
      persistence:
        size: 20Gi
        storageClass: openebs-hostpath
      resources:
        limits:
          memory: 800M
        requests:
          cpu: 60m
          memory: 150M
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      rules:
        enabled: false
      serviceMonitor:
        enabled: true
        metricsInstance:
          enabled: false
        additionalLabels:
          app.kubernetes.io/part-of: kube-prometheus-stack
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
    sidecar:
      image:
        repository: ghcr.io/kiwigrid/k8s-sidecar
      rules:
        searchNamespace: ALL
        folder: /rules/fake
    chunksCache:
      enabled: false
    resultsCache:
      enabled: false
    lokiCanary:
      enabled: false
    test:
      enabled: false
  valuesFrom:
    - kind: Secret
      name: loki-secret
      valuesKey: S3_BUCKET_HOST #gitleaks:allow
      targetPath: loki.storage.s3.endpoint
    - kind: Secret
      name: loki-secret
      valuesKey: S3_BUCKET_REGION #gitleaks:allow
      targetPath: loki.storage.s3.region
    - kind: Secret
      name: loki-secret
      valuesKey: S3_ACCESS_KEY #gitleaks:allow
      targetPath: loki.storage.s3.accessKeyId
    - kind: Secret
      name: loki-secret
      valuesKey: S3_SECRET_KEY #gitleaks:allow
      targetPath: loki.storage.s3.secretAccessKey
